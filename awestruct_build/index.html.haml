---
layout: impress_basic
title: Home
---
#title.step.slide{:data=>{:x=>"-1000", :y=>"-1500"}}
  %img#logo{:width=>"329", :height=>"63", :alt=>"JBoss by Red Hat", :src=>"images/RH-JBoss-reverse_RGB.png"}
  %br
  #presentation_title.centered
    Building CDI Extensions using Apache DeltaSpike
  .presentation_info
    Jason Porter 
    %br
    Senior Software Engineer, JBoss by Red Hat
    :textile
      @@lightguardjp@
    community.jboss.org/people/lightguard
#what_cdi.centered.step.slide{:data=>{:x=>"-150", :y=>"-1500", :scale=>"2", :rotate=>"270"}}
  What does CDI (Contexts and Dependency Injection) do for us?
#what_cdi_context.what_cdi_detail.slide.step{:data=>{:x=>"-300", :y=>"-1710", :scale=>"0.1"}}
  %span.underline Context
  %br
  %ul
    %li Manage a bean's lifecycle
    %li Bind a bean to a context
#what_cdi_dependency.what_cdi_detail.slide.step{:data=>{:x=>"-300", :y=>"-1780", :scale=>"0.1"}}
  %span.underline Dependency
  %br
  %ul
    %li Discover and resolve
    %li Bean Metadata
    %li Loose coupling
#what_cdi_injection.what_cdi_detail.slide.step{:data=>{:x=>"-300", :y=>"-1830", :scale=>"0.1"}}
  %span.underline Injection
  %br
  %ul
    %li Injection
    %li Strong typing
#without_cdi.slide.step{:data=>{:x=>"700", :y=>"-1500"}}
  .larger
    Life without CDI
  %ul
    %li constructor injection
    %li{:data=>{:jmpress=>"warp-left"}} setter injection
    %li{:data=>{:jmpress=>"fade after 750ms"}} string based injection (Seam 2 / Spring)
    %li{:data=>{:jmpress=>"drive-right after 500ms"}} JNDI lookups
    %li{:data=>{:jmpress=>"drive-down after 750ms"}} Session / Request lookup and storage
    %li{:data=>{:jmpress=>"zoom after 1000ms"}} Tight coupling to 3rd party libraries
#life_with_cdi.slide.step{:data=>{:x=>"700", :y=>"-1500", :scale=>"0.02"}}
  .larger
    Life with CDI
  %ul
    %li Minimal configuration
    %li Compiler checked mistakes
    %li Fail fast at deploy time
    %li Standardized Injection
    %li Multiple scopes
    %li Very loose coupling to 3rd party libraries
#improve_dev_exp.slide.step{:data=>{:x=>"1550", :y=>"-1500"}}
  .larger
    How does CDI improve the Development Experience?
  #ramp_up.dev_exp_child.slide.step{:data=>{:x=>"-300", :y=>"-100", :scale=>"0.4"}}
    .larger Easy &amp; smooth ramp up
  #tooling.child.slide.step{:data=>{:x=>"200", :y=>"-100", :scale=>"0.4"}}
    .larger Great Tooling support
    %img{:src=>"images/netbeans.png", :width=>"206", :height=>"45", :alt=>"NetBeans"}
    %img.right{:src=>"images/jbosstools_horiz_200.png", :width=>"200", :height=>"50", :alt=>"JBoss Tools"}
    %br/
    %img{:src=>"images/logo_idea_small.gif", :width=>"130", :height=>"25", :alt=>"IntelliJ IDEA", :style=>"left:40%;position:absolute"}
  #simplicity.child.slide.step{:data=>{:x=>"-300", :y=>"100", :scale=>"0.4"}}
    .larger Simplicity
    :textile
      * @@Inject@
      * @@Produces@
  #useful.child.slide.step{:data=>{:x=>"-100", :y=>"100", :scale=>"0.4"}}
    .larger Useful at every stage
    %ul
      %li Development
      %li Testing -- Arquillian
      %li Production
      %li Alternatives, Specialization
  #productivity.child.slide.step{:data=>{:x=>"200", :y=>"100", :scale=>"0.4"}}
    .larger Improve Productivity
    %ul
      %li{:data=>{:jmpress=>"appear"}} Interceptors
      %li{:data=>{:jmpress=>"appear"}} Decorators
      %li{:data=>{:jmpress=>"appear"}} Events
      %li{:data=>{:jmpress=>"appear"}} Quick Feedback
#best_part.slide.step{:data=>{:x=>"200", :y=>"300", :scale=>"5"}}
  .larger Wait! There's more
  .centered{:data=>{:jmpress=>"zoom"}} 
    The best part is what isn't there
    %br/
    %img{:src=>"images/portable_extensions.png", :alt=>"Portable Extensions", :width=>"388", :height=>"300"}
  .footnote{:data=>{:jmpress=>"fade after 500ms"}}
    :markdown
      Photo Credit "Granddad's suitcase" is Copyrighted by Flickr user: [Martin Thomas](http://www.flickr.com/photos/martin_thomas/5671030308/sizes/l/in/photostream/) under the Creative Commons Attribution license.
#what_can_do.slide.step{:data=>{:x=>"100", :y=>"600"}}
  .centered.larger
    What can CDI Extensions do?
    .smaller
      %ul
        %li Register additional beans
        %li Satisfy Injection Points
        %li Create new Scopes and backings
        %li Modify Bean metadata
#secret_ingredient.slide.step{:data=>{:x=>"1800", :y=>"1600", :scale=>"0.5"}}
  %img.right{:src=>"images/secret_ingredient.png", :alt=>"Secret Ingredient", :width=>"129", :height=>"190"}
  .centered
    What is the secret ingredient?
  %br/
  .footnote
    :markdown
      Photo Credit "chemistry" is Copyrighted by Flickr user: [Martin Thomas](http://www.flickr.com/photos/martin_thomas/5671030308/sizes/l/in/photostream/) under the Creative Commons Attribution license.  
#deploy_application.lifecycle.slide.step{:data=>{:x=>"4300", :y=>"1850"}}
  Deploy Application
#before_bean_discovery.lifecycle.slide.step{:data=>{:x=>"4250", :y=>"1500", :rotate=>"#{-27*1}"}}
  Before Bean Discovery
  .smallest
    .left
      %ul
        %li add scope
        %li add annotated type
        %li add qualifier
    .right
      %ul
        %li add interceptor binding
        %li add stereotype
#deploy_application.lifecycle.slide.step{:data=>{:x=>"4000", :y=>"1050", :rotate=>"#{-27*2}"}}
  Scan Archives
#process_annotated_types.lifecycle.slide.step{:data=>{:x=>"3600", :y=>"900", :rotate=>"#{-27*3}"}}
  Process Annotated Types
  .smaller
    %ul
      %li veto bean candidate
      %li replace annotated type
#process_injection_targets.lifecycle.slide.step{:data=>{:x=>"3100", :y=>"900", :rotate=>"#{-27*4}"}}
  Process Injection Targets
  .smaller
    %ul
      %li replace injection targets
#process_beans.lifecycle.slide.step{:data=>{:x=>"2800", :y=>"1270", :rotate=>"#{-27*5}"}}
  Process Beans
  .smaller
    %ul
      %li prepare additional beans
#process_producer.lifecycle.slide.step{:data=>{:x=>"2650", :y=>"1600", :rotate=>"#{-27*6}"}}
  Process Producer
  .smaller
    %ul
      %li modify producer
#process_observer.lifecycle.slide.step{:data=>{:x=>"2600", :y=>"2000", :rotate=>"#{-27*7}"}}
  Process Observer
#after_bean_discovery.lifecycle.slide.step{:data=>{:x=>"2750", :y=>"2350", :rotate=>"#{-27*8}"}}
  After Bean Discovery
  .smallest
    .left
      %ul
        %li add bean
        %li add observer method
    .right
      %ul
        %li add context
#after_deployment_validation.lifecycle.slide.step{:data=>{:x=>"3150", :y=>"2550", :rotate=>"#{-27*9}"}}
  After Deployment Validation
  .smaller
    %ul
      %li assessment
#application_running.lifecycle.slide.step{:data=>{:x=>"3600", :y=>"2590", :rotate=>"#{-27*10}"}}
  Application Running
#before_shutdown.lifecycle.slide.step{:data=>{:x=>"3950", :y=>"2550", :rotate=>"#{-27*11}"}}
  Before Shutdown
#undeploy.lifecycle.slide.step{:data=>{:x=>"4200", :y=>"2270", :rotate=>"#{-27*12}"}}
  Undeploy Application
#deltaspike.slide.step{:data=>{:x=>"2800", :y=>"-1000", :rotate=>"270"}}
  .centered
    Apache DeltaSpike
    %br/
    .smaller
      We believe the community can create awesome extensions and easily share them
      %br/
      %br/
      These extensions close the gaps
#deltaspike_history.slide.step{:data=>{:x=>"2800", :y=>"-200", :rotate=>"270"}}
  .centered.larger
    History
  .smaller
    %ul
      %li Apache MyFaces CODI
      %li Seam 3
#deltaspike_history_2.slide.step{:data=>{:x=>"2800", :y=>"700", :rotate=>"270"}}
  .centered
    History (cont)
  .smallest
    %ul
      %li December 2011 - Entered Apache Incubation 
      %li February 2012 - Released v0.1-incubating
    Releasing often ~2 months
#deltaspike_contributors_companies.slide.step{:data=>{:x=>"-1000", :y=>"2300"}}
  .centered
    Contributors - Companies
  .smaller
    .left
      %ul
        %li Red Hat
        %li Oracle
    .right
      %ul
        %li SoftwareMill
        %li CDI Source
#deltaspike_contributors_individuals.slide.step{:data=>{:x=>"-200", :y=>"2300"}}
  .centered
    Contributors - Individuals
  .smallest
    %ul#first-list
      %li Andy Gibson
      %li Antoine Sabot-Durand
      %li Arne Limburg
      %li Cody Lerum
      %li David Blevins
      %li George Gastaldi
    %ul#second-list
      %li Gerhard Petracek
      %li Jakob Korherr
      %li John Ament
      %li Mark Struberg
      %li Matthias Wessendorf
      %li Pete Royle
#testing.slide.step{:data=>{:x=>"800", :y=>"2300"}}
  Testing is a priority
  %ul
    %li unit
    %li integration w/ Arquillian
#compatibility.slide.step{:data=>{:x=>"1500", :y=>"2300"}}
  .centered
    Compatibility taken seriously
  .smallest
    .left
      %ul
        %li Weld
        %li Open WebBeans
        %li Resin (Coming soon)
    .right
      %ul
        %li AS7
        %li WebLogic 12c
        %li Glassfish
        %li TomEE
        %li WebSphere
#deltaspike_status.slide.step{:data=>{:x=>"-1000", :y=>"2800"}}
  .centered
    Status
  .smallest
    %ul
      %li 
        %span.underline v0.1-incubating
        %ul 
          %li SE compatible
          %li Utilities
          %li Author tools
      %li 
        %span.underline v0.2-incubating: releasing ~1-2 weeks
        %ul
          %li Security
          %li Exception Handling
          %li Additional core features
#utilities.slide.step{:data=>{:x=>"-1200", :y=>"2790", :scale=>"0.1"}}
  .smaller
    %ul
      %li BeanProvider
      %li BeanManagerProvider
#author_aids.slide.step{:data=>{:x=>"-1200", :y=>"2833", :scale=>"0.1"}}
  .smaller
    %ul
      %li Extension Activation
      %li Bean Exclude
      %li Stages
      %li AnnotatedTypeBuilder
#demo.slide.step{:data=>{:x=>"-300", :y=>"2833"}}
  .centered
    DEMO
#Q_A.slide.step{:data=>{:x=>"0", :y=>"2900", :scale=>"0.1", :rotate=>"90"}}
  .centered
    Q&amp;A
